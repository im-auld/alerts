// Code generated by protoc-gen-go.
// source: alerts.proto
// DO NOT EDIT!

/*
Package alerts is a generated protocol buffer package.

It is generated from these files:
	alerts.proto

It has these top-level messages:
	AlertError
	Alert
	GetAlertsForUserRequest
	GetAlertsForUserResponse
	MarkAlertSeenRequest
	MarkAlertSeenResponse
	SendAlertRequest
	SendAlertResponse
*/
package alerts

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AlertErrorCode int32

const (
	AlertErrorCode_NOT_FOUND    AlertErrorCode = 0
	AlertErrorCode_SERVER_ERROR AlertErrorCode = 1
	AlertErrorCode_BAD_REQUEST  AlertErrorCode = 3
)

var AlertErrorCode_name = map[int32]string{
	0: "NOT_FOUND",
	1: "SERVER_ERROR",
	3: "BAD_REQUEST",
}
var AlertErrorCode_value = map[string]int32{
	"NOT_FOUND":    0,
	"SERVER_ERROR": 1,
	"BAD_REQUEST":  3,
}

func (x AlertErrorCode) String() string {
	return proto.EnumName(AlertErrorCode_name, int32(x))
}
func (AlertErrorCode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AlertError struct {
	Message   string         `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	ErrorCode AlertErrorCode `protobuf:"varint,2,opt,name=error_code,json=errorCode,enum=alerts.AlertErrorCode" json:"error_code,omitempty"`
}

func (m *AlertError) Reset()                    { *m = AlertError{} }
func (m *AlertError) String() string            { return proto.CompactTextString(m) }
func (*AlertError) ProtoMessage()               {}
func (*AlertError) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AlertError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AlertError) GetErrorCode() AlertErrorCode {
	if m != nil {
		return m.ErrorCode
	}
	return AlertErrorCode_NOT_FOUND
}

type Alert struct {
	RecipientId int64  `protobuf:"varint,1,opt,name=recipient_id,json=recipientId" json:"recipient_id,omitempty"`
	Uniq        int64  `protobuf:"varint,2,opt,name=uniq" json:"uniq,omitempty"`
	ThreadId    int64  `protobuf:"varint,3,opt,name=thread_id,json=threadId" json:"thread_id,omitempty"`
	Message     string `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	Timestamp   int64  `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
	ActionPath  string `protobuf:"bytes,6,opt,name=action_path,json=actionPath" json:"action_path,omitempty"`
	Ttl         int64  `protobuf:"varint,7,opt,name=ttl" json:"ttl,omitempty"`
	Seen        bool   `protobuf:"varint,8,opt,name=seen" json:"seen,omitempty"`
}

func (m *Alert) Reset()                    { *m = Alert{} }
func (m *Alert) String() string            { return proto.CompactTextString(m) }
func (*Alert) ProtoMessage()               {}
func (*Alert) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Alert) GetRecipientId() int64 {
	if m != nil {
		return m.RecipientId
	}
	return 0
}

func (m *Alert) GetUniq() int64 {
	if m != nil {
		return m.Uniq
	}
	return 0
}

func (m *Alert) GetThreadId() int64 {
	if m != nil {
		return m.ThreadId
	}
	return 0
}

func (m *Alert) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Alert) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Alert) GetActionPath() string {
	if m != nil {
		return m.ActionPath
	}
	return ""
}

func (m *Alert) GetTtl() int64 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

func (m *Alert) GetSeen() bool {
	if m != nil {
		return m.Seen
	}
	return false
}

type GetAlertsForUserRequest struct {
	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *GetAlertsForUserRequest) Reset()                    { *m = GetAlertsForUserRequest{} }
func (m *GetAlertsForUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAlertsForUserRequest) ProtoMessage()               {}
func (*GetAlertsForUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetAlertsForUserRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type GetAlertsForUserResponse struct {
	Alerts []*Alert    `protobuf:"bytes,1,rep,name=alerts" json:"alerts,omitempty"`
	Error  *AlertError `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
}

func (m *GetAlertsForUserResponse) Reset()                    { *m = GetAlertsForUserResponse{} }
func (m *GetAlertsForUserResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAlertsForUserResponse) ProtoMessage()               {}
func (*GetAlertsForUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetAlertsForUserResponse) GetAlerts() []*Alert {
	if m != nil {
		return m.Alerts
	}
	return nil
}

func (m *GetAlertsForUserResponse) GetError() *AlertError {
	if m != nil {
		return m.Error
	}
	return nil
}

type MarkAlertSeenRequest struct {
	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Uniq   int64 `protobuf:"varint,2,opt,name=uniq" json:"uniq,omitempty"`
}

func (m *MarkAlertSeenRequest) Reset()                    { *m = MarkAlertSeenRequest{} }
func (m *MarkAlertSeenRequest) String() string            { return proto.CompactTextString(m) }
func (*MarkAlertSeenRequest) ProtoMessage()               {}
func (*MarkAlertSeenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *MarkAlertSeenRequest) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *MarkAlertSeenRequest) GetUniq() int64 {
	if m != nil {
		return m.Uniq
	}
	return 0
}

type MarkAlertSeenResponse struct {
	Error *AlertError `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *MarkAlertSeenResponse) Reset()                    { *m = MarkAlertSeenResponse{} }
func (m *MarkAlertSeenResponse) String() string            { return proto.CompactTextString(m) }
func (*MarkAlertSeenResponse) ProtoMessage()               {}
func (*MarkAlertSeenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *MarkAlertSeenResponse) GetError() *AlertError {
	if m != nil {
		return m.Error
	}
	return nil
}

type SendAlertRequest struct {
	Alert *Alert `protobuf:"bytes,1,opt,name=alert" json:"alert,omitempty"`
}

func (m *SendAlertRequest) Reset()                    { *m = SendAlertRequest{} }
func (m *SendAlertRequest) String() string            { return proto.CompactTextString(m) }
func (*SendAlertRequest) ProtoMessage()               {}
func (*SendAlertRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SendAlertRequest) GetAlert() *Alert {
	if m != nil {
		return m.Alert
	}
	return nil
}

type SendAlertResponse struct {
	Error *AlertError `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *SendAlertResponse) Reset()                    { *m = SendAlertResponse{} }
func (m *SendAlertResponse) String() string            { return proto.CompactTextString(m) }
func (*SendAlertResponse) ProtoMessage()               {}
func (*SendAlertResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SendAlertResponse) GetError() *AlertError {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterType((*AlertError)(nil), "alerts.AlertError")
	proto.RegisterType((*Alert)(nil), "alerts.Alert")
	proto.RegisterType((*GetAlertsForUserRequest)(nil), "alerts.GetAlertsForUserRequest")
	proto.RegisterType((*GetAlertsForUserResponse)(nil), "alerts.GetAlertsForUserResponse")
	proto.RegisterType((*MarkAlertSeenRequest)(nil), "alerts.MarkAlertSeenRequest")
	proto.RegisterType((*MarkAlertSeenResponse)(nil), "alerts.MarkAlertSeenResponse")
	proto.RegisterType((*SendAlertRequest)(nil), "alerts.SendAlertRequest")
	proto.RegisterType((*SendAlertResponse)(nil), "alerts.SendAlertResponse")
	proto.RegisterEnum("alerts.AlertErrorCode", AlertErrorCode_name, AlertErrorCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Alerts service

type AlertsClient interface {
	GetAlertsForUser(ctx context.Context, in *GetAlertsForUserRequest, opts ...grpc.CallOption) (*GetAlertsForUserResponse, error)
	MarkAlertSeen(ctx context.Context, in *MarkAlertSeenRequest, opts ...grpc.CallOption) (*MarkAlertSeenResponse, error)
	SendAlert(ctx context.Context, in *SendAlertRequest, opts ...grpc.CallOption) (*SendAlertResponse, error)
}

type alertsClient struct {
	cc *grpc.ClientConn
}

func NewAlertsClient(cc *grpc.ClientConn) AlertsClient {
	return &alertsClient{cc}
}

func (c *alertsClient) GetAlertsForUser(ctx context.Context, in *GetAlertsForUserRequest, opts ...grpc.CallOption) (*GetAlertsForUserResponse, error) {
	out := new(GetAlertsForUserResponse)
	err := grpc.Invoke(ctx, "/alerts.Alerts/GetAlertsForUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertsClient) MarkAlertSeen(ctx context.Context, in *MarkAlertSeenRequest, opts ...grpc.CallOption) (*MarkAlertSeenResponse, error) {
	out := new(MarkAlertSeenResponse)
	err := grpc.Invoke(ctx, "/alerts.Alerts/MarkAlertSeen", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *alertsClient) SendAlert(ctx context.Context, in *SendAlertRequest, opts ...grpc.CallOption) (*SendAlertResponse, error) {
	out := new(SendAlertResponse)
	err := grpc.Invoke(ctx, "/alerts.Alerts/SendAlert", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Alerts service

type AlertsServer interface {
	GetAlertsForUser(context.Context, *GetAlertsForUserRequest) (*GetAlertsForUserResponse, error)
	MarkAlertSeen(context.Context, *MarkAlertSeenRequest) (*MarkAlertSeenResponse, error)
	SendAlert(context.Context, *SendAlertRequest) (*SendAlertResponse, error)
}

func RegisterAlertsServer(s *grpc.Server, srv AlertsServer) {
	s.RegisterService(&_Alerts_serviceDesc, srv)
}

func _Alerts_GetAlertsForUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAlertsForUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertsServer).GetAlertsForUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/alerts.Alerts/GetAlertsForUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertsServer).GetAlertsForUser(ctx, req.(*GetAlertsForUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Alerts_MarkAlertSeen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MarkAlertSeenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertsServer).MarkAlertSeen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/alerts.Alerts/MarkAlertSeen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertsServer).MarkAlertSeen(ctx, req.(*MarkAlertSeenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Alerts_SendAlert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendAlertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertsServer).SendAlert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/alerts.Alerts/SendAlert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertsServer).SendAlert(ctx, req.(*SendAlertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Alerts_serviceDesc = grpc.ServiceDesc{
	ServiceName: "alerts.Alerts",
	HandlerType: (*AlertsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAlertsForUser",
			Handler:    _Alerts_GetAlertsForUser_Handler,
		},
		{
			MethodName: "MarkAlertSeen",
			Handler:    _Alerts_MarkAlertSeen_Handler,
		},
		{
			MethodName: "SendAlert",
			Handler:    _Alerts_SendAlert_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "alerts.proto",
}

func init() { proto.RegisterFile("alerts.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 490 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0x71, 0xf3, 0xe1, 0x49, 0x52, 0xcc, 0x08, 0xe8, 0x12, 0x8a, 0x1a, 0x8c, 0x90, 0x2c,
	0x0e, 0x3d, 0x18, 0x21, 0x4e, 0x1c, 0x92, 0xd6, 0x45, 0x39, 0x90, 0xc0, 0xa6, 0x81, 0x13, 0xb2,
	0x4c, 0x3c, 0x22, 0x56, 0x1b, 0xdb, 0xdd, 0xdd, 0xfc, 0x59, 0xfe, 0x07, 0x77, 0xe4, 0xb5, 0x9d,
	0x34, 0x69, 0xa2, 0x8a, 0xdb, 0xec, 0xbe, 0x79, 0xcf, 0x6f, 0xe6, 0xad, 0x0c, 0xed, 0xf0, 0x86,
	0x84, 0x92, 0x67, 0x99, 0x48, 0x55, 0x8a, 0xf5, 0xe2, 0xe4, 0xfc, 0x04, 0xe8, 0xe7, 0x95, 0x2f,
	0x44, 0x2a, 0x90, 0x41, 0x63, 0x41, 0x52, 0x86, 0xbf, 0x89, 0x19, 0x3d, 0xc3, 0xb5, 0x78, 0x75,
	0xc4, 0x0f, 0x00, 0x94, 0xb7, 0x04, 0xb3, 0x34, 0x22, 0xf6, 0xa8, 0x67, 0xb8, 0x47, 0xde, 0xf3,
	0xb3, 0x52, 0x72, 0xad, 0x70, 0x9e, 0x46, 0xc4, 0x2d, 0xaa, 0x4a, 0xe7, 0x8f, 0x01, 0x35, 0x8d,
	0xe2, 0x6b, 0x68, 0x0b, 0x9a, 0xc5, 0x59, 0x4c, 0x89, 0x0a, 0xe2, 0x48, 0xeb, 0x9b, 0xbc, 0xb5,
	0xba, 0x1b, 0x46, 0x88, 0x70, 0xb8, 0x4c, 0xe2, 0x5b, 0xad, 0x6e, 0x72, 0x5d, 0xe3, 0x4b, 0xb0,
	0xd4, 0x5c, 0x50, 0x18, 0xe5, 0x1c, 0x53, 0x03, 0xcd, 0xe2, 0x62, 0x18, 0xdd, 0xb5, 0x7b, 0xb8,
	0x69, 0xf7, 0x04, 0x2c, 0x15, 0x2f, 0x48, 0xaa, 0x70, 0x91, 0xb1, 0x9a, 0xa6, 0xad, 0x2f, 0xf0,
	0x14, 0x5a, 0xe1, 0x4c, 0xc5, 0x69, 0x12, 0x64, 0xa1, 0x9a, 0xb3, 0xba, 0xe6, 0x42, 0x71, 0xf5,
	0x35, 0x54, 0x73, 0xb4, 0xc1, 0x54, 0xea, 0x86, 0x35, 0x34, 0x31, 0x2f, 0x73, 0x6f, 0x92, 0x28,
	0x61, 0xcd, 0x9e, 0xe1, 0x36, 0xb9, 0xae, 0x1d, 0x0f, 0x8e, 0x3f, 0x93, 0xd2, 0xe3, 0xc9, 0xcb,
	0x54, 0x4c, 0x25, 0x09, 0x4e, 0xb7, 0x4b, 0x92, 0x0a, 0x8f, 0xa1, 0xb1, 0x94, 0x24, 0xd6, 0x83,
	0xd6, 0xf3, 0xe3, 0x30, 0x72, 0xae, 0x81, 0xdd, 0xe7, 0xc8, 0x2c, 0x4d, 0x24, 0xe1, 0x5b, 0x28,
	0x53, 0x61, 0x46, 0xcf, 0x74, 0x5b, 0x5e, 0x67, 0x63, 0xbf, 0xbc, 0x04, 0xd1, 0x85, 0x9a, 0x5e,
	0xb0, 0x5e, 0x47, 0xcb, 0xc3, 0xfb, 0x29, 0xf0, 0xa2, 0xc1, 0x39, 0x87, 0xa7, 0x5f, 0x42, 0x71,
	0xad, 0x81, 0x09, 0x51, 0xf2, 0x90, 0xbb, 0x5d, 0x09, 0x38, 0x7d, 0x78, 0xb6, 0x25, 0x52, 0xda,
	0x5d, 0xf9, 0x30, 0x1e, 0xf2, 0xf1, 0x11, 0xec, 0x09, 0x25, 0x51, 0x31, 0x46, 0xe9, 0xe1, 0x0d,
	0xd4, 0x74, 0x7f, 0xc9, 0xde, 0x9a, 0xb5, 0xc0, 0x9c, 0x4f, 0xf0, 0xe4, 0x0e, 0xf1, 0x7f, 0xbf,
	0xfb, 0x6e, 0x00, 0x47, 0x9b, 0x4f, 0x13, 0x3b, 0x60, 0x8d, 0xc6, 0x57, 0xc1, 0xe5, 0x78, 0x3a,
	0xba, 0xb0, 0x0f, 0xd0, 0x86, 0xf6, 0xc4, 0xe7, 0xdf, 0x7d, 0x1e, 0xf8, 0x9c, 0x8f, 0xb9, 0x6d,
	0xe0, 0x63, 0x68, 0x0d, 0xfa, 0x17, 0x01, 0xf7, 0xbf, 0x4d, 0xfd, 0xc9, 0x95, 0x6d, 0x7a, 0x7f,
	0x0d, 0xa8, 0x17, 0x71, 0xe1, 0x0f, 0xb0, 0xb7, 0xb3, 0xc3, 0xd3, 0xea, 0xeb, 0x7b, 0x5e, 0x42,
	0xb7, 0xb7, 0xbf, 0xa1, 0x98, 0xc7, 0x39, 0xc0, 0x11, 0x74, 0x36, 0x56, 0x8c, 0x27, 0x15, 0x69,
	0x57, 0x7c, 0xdd, 0x57, 0x7b, 0xd0, 0x95, 0xde, 0x00, 0xac, 0xd5, 0xda, 0x90, 0x55, 0xdd, 0xdb,
	0x11, 0x74, 0x5f, 0xec, 0x40, 0x2a, 0x8d, 0x5f, 0x75, 0xfd, 0x9f, 0x78, 0xff, 0x2f, 0x00, 0x00,
	0xff, 0xff, 0xa5, 0xb6, 0x02, 0xb3, 0x37, 0x04, 0x00, 0x00,
}
